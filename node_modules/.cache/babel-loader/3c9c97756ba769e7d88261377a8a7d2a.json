{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\n\nclass Canvas extends React.Component {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.speedX = Math.random() * 4 - 2;\n    this.speedY = Math.random() * 4 - 2;\n    this.maxSize = Math.random() * 7 + 5;\n    this.size = Math.random() * 1 + 2;\n  }\n\n  update() {\n    this.x += this.speedX;\n    this.y += this.speedY;\n    this.size += 0.1;\n\n    if (this.size < this.maxSize) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fillStyle = 'hsl(140,100%,50%)';\n      ctx.fill();\n      ctx.stroke();\n    }\n  }\n\n}\n\nwindow.addEventListener('mousemove', function (e) {\n  const canvas = new Canvas(e.x, e.y);\n  canvas.update();\n});\nexport default Canvas;","map":{"version":3,"sources":["C:\\Users\\King Riz\\Downloads\\insta-repo-app-master\\src\\Pages\\Canvas\\Canvas.js"],"names":["React","useRef","useEffect","Canvas","Component","constructor","x","y","speedX","Math","random","speedY","maxSize","size","update","ctx","beginPath","arc","PI","fillStyle","fill","stroke","window","addEventListener","e","canvas"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAKA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAoC;AAMhCC,EAAAA,WAAW,CAACC,CAAD,EAAIC,CAAJ,EAAM;AACb,SAAKD,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAlC;AACA,SAAKC,MAAL,GAAcF,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAlC;AACA,SAAKE,OAAL,GAAeH,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAnC;AACA,SAAKG,IAAL,GAAYJ,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAhC;AACH;;AAEDI,EAAAA,MAAM,GAAE;AACJ,SAAKR,CAAL,IAAU,KAAKE,MAAf;AACA,SAAKD,CAAL,IAAU,KAAKI,MAAf;AACA,SAAKE,IAAL,IAAa,GAAb;;AACA,QAAI,KAAKA,IAAL,GAAY,KAAKD,OAArB,EAA6B;AACzBG,MAAAA,GAAG,CAACC,SAAJ;AACAD,MAAAA,GAAG,CAACE,GAAJ,CAAQ,KAAKX,CAAb,EAAgB,KAAKC,CAArB,EAAwB,KAAKM,IAA7B,EAAmC,CAAnC,EAAsCJ,IAAI,CAACS,EAAL,GAAU,CAAhD;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgB,mBAAhB;AACAJ,MAAAA,GAAG,CAACK,IAAJ;AACAL,MAAAA,GAAG,CAACM,MAAJ;AACH;AACJ;;AA1B+B;;AA8BpCC,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqC,UAASC,CAAT,EAAW;AAC5C,QAAMC,MAAM,GAAG,IAAItB,MAAJ,CAAWqB,CAAC,CAAClB,CAAb,EAAgBkB,CAAC,CAACjB,CAAlB,CAAf;AACAkB,EAAAA,MAAM,CAACX,MAAP;AACH,CAHD;AAKA,eAAeX,MAAf","sourcesContent":["\r\nimport React, { useRef, useEffect } from 'react'\r\n\r\n\r\n\r\n\r\nclass Canvas extends React.Component{\r\n\r\n    canvasRef = useRef(null)\r\n    canvas = canvasRef.current\r\n    ctx = canvas.getContext('2d')\r\n\r\n    constructor(x, y){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.speedX = Math.random() * 4 - 2;\r\n        this.speedY = Math.random() * 4 - 2;\r\n        this.maxSize = Math.random() * 7 + 5;\r\n        this.size = Math.random() * 1 + 2;\r\n    }\r\n\r\n    update(){\r\n        this.x += this.speedX;\r\n        this.y += this.speedY;\r\n        this.size += 0.1;\r\n        if (this.size < this.maxSize){\r\n            ctx.beginPath();\r\n            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n            ctx.fillStyle = 'hsl(140,100%,50%)';\r\n            ctx.fill();\r\n            ctx.stroke();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener('mousemove', function(e){\r\n    const canvas = new Canvas(e.x, e.y)\r\n    canvas.update();\r\n})\r\n\r\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}