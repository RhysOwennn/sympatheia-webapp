{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\King Riz\\\\Downloads\\\\insta-repo-app-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\King Riz\\\\Downloads\\\\insta-repo-app-master\\\\src\\\\Pages\\\\Canvas\\\\Canvas.js\";\nimport React, { useRef, useEffect } from 'react';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const contextRef = useRef(null);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isDrawing = _useState2[0],\n        setIsDrawing = _useState2[1];\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth * 2;\n    canvas.height = window.innerHeight * 2;\n    canvas.style.width = '${window.innerWidth}px';\n    canvas.style.height = '${window.innerHeight}px';\n    const context = canvas.getContext('2d');\n    context.scale(2, 2);\n    context.lineCap = \"round\";\n    context.strokeStyle = \"black\";\n    context.lineWidth = 5;\n    contextRef.current = context;\n  }, []);\n\n  const startDrawing = () => {\n    const _nativeEvent = nativeEvent,\n          offsetX = _nativeEvent.offsetX,\n          offsetY = _nativeEvent.offsetY;\n    contextRef.current.beginPath();\n    contextRef.current.moveTo(x, y);\n    setIsDrawing(true);\n  };\n\n  const finishDrawing = () => {\n    contextRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = () => {};\n\n  return React.createElement(\"canvas\", {\n    onMouseDown: startDrawing,\n    onMouseUp: finishDrawing,\n    onMouseMove: draw,\n    ref: canvasRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n} // window.addEventListener('mousemove', function(e){\n//     const canvas = new Canvas(e.x, e.y)\n//     canvas.update();\n// })\n\n\nexport default Canvas; // constructor(x, y){\n//     this.x = x;\n//     this.y = y;\n//     this.speedX = Math.random() * 4 - 2;\n//     this.speedY = Math.random() * 4 - 2;\n//     this.maxSize = Math.random() * 7 + 5;\n//     this.size = Math.random() * 1 + 2;\n// }\n// update(){\n//     ctx = canvas.getContext('2d')\n//     this.x += this.speedX;\n//     this.y += this.speedY;\n//     this.size += 0.1;\n//     if (this.size < this.maxSize){\n//         ctx.beginPath();\n//         ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//         ctx.fillStyle = 'hsl(140,100%,50%)';\n//         ctx.fill();\n//         ctx.stroke();\n//     }\n// }","map":{"version":3,"sources":["C:\\Users\\King Riz\\Downloads\\insta-repo-app-master\\src\\Pages\\Canvas\\Canvas.js"],"names":["React","useRef","useEffect","Canvas","canvasRef","contextRef","useState","isDrawing","setIsDrawing","canvas","current","width","window","innerWidth","height","innerHeight","style","context","getContext","scale","lineCap","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","x","y","finishDrawing","closePath","draw"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAIA,SAASC,MAAT,GAAiB;AAEb,QAAMC,SAAS,GAAGH,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMI,UAAU,GAAGJ,MAAM,CAAC,IAAD,CAAzB;;AAHa,oBAIqBK,QAAQ,CAAC,KAAD,CAJ7B;AAAA;AAAA,QAINC,SAJM;AAAA,QAIKC,YAJL;;AAMbN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,MAAM,GAAGL,SAAS,CAACM,OAAzB;AACAD,IAAAA,MAAM,CAACE,KAAP,GAAeC,MAAM,CAACC,UAAP,GAAoB,CAAnC;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgBF,MAAM,CAACG,WAAP,GAAqB,CAArC;AACAN,IAAAA,MAAM,CAACO,KAAP,CAAaL,KAAb,GAAqB,wBAArB;AACAF,IAAAA,MAAM,CAACO,KAAP,CAAaF,MAAb,GAAsB,yBAAtB;AAEA,UAAMG,OAAO,GAAGR,MAAM,CAACS,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,KAAR,CAAc,CAAd,EAAgB,CAAhB;AACAF,IAAAA,OAAO,CAACG,OAAR,GAAkB,OAAlB;AACAH,IAAAA,OAAO,CAACI,WAAR,GAAsB,OAAtB;AACAJ,IAAAA,OAAO,CAACK,SAAR,GAAoB,CAApB;AACAjB,IAAAA,UAAU,CAACK,OAAX,GAAqBO,OAArB;AAKH,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMM,YAAY,GAAG,MAAM;AAAA,yBACIC,WADJ;AAAA,UAChBC,OADgB,gBAChBA,OADgB;AAAA,UACPC,OADO,gBACPA,OADO;AAEvBrB,IAAAA,UAAU,CAACK,OAAX,CAAmBiB,SAAnB;AACAtB,IAAAA,UAAU,CAACK,OAAX,CAAmBkB,MAAnB,CAA0BC,CAA1B,EAA6BC,CAA7B;AACAtB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GALD;;AAOA,QAAMuB,aAAa,GAAG,MAAM;AACxB1B,IAAAA,UAAU,CAACK,OAAX,CAAmBsB,SAAnB;AACAxB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMyB,IAAI,GAAG,MAAK,CAGjB,CAHD;;AAKA,SACI;AAAQ,IAAA,WAAW,EAAEV,YAArB;AAAmC,IAAA,SAAS,EAAEQ,aAA9C;AAA6D,IAAA,WAAW,EAAEE,IAA1E;AAAgF,IAAA,GAAG,EAAE7B,SAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,C,CAED;AACA;AACA;AACA;;;AAEA,eAAeD,MAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport React, { useRef, useEffect } from 'react'\r\n\r\n\r\n\r\nfunction Canvas(){\r\n\r\n    const canvasRef = useRef(null)\r\n    const contextRef = useRef(null)\r\n    const [isDrawing, setIsDrawing] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        canvas.width = window.innerWidth * 2;\r\n        canvas.height = window.innerHeight * 2;\r\n        canvas.style.width = '${window.innerWidth}px';\r\n        canvas.style.height = '${window.innerHeight}px';\r\n\r\n        const context = canvas.getContext('2d')\r\n        context.scale(2,2)\r\n        context.lineCap = \"round\";\r\n        context.strokeStyle = \"black\";\r\n        context.lineWidth = 5;\r\n        contextRef.current = context;\r\n        \r\n\r\n\r\n\r\n    }, [])\r\n\r\n    const startDrawing = () => {\r\n        const {offsetX, offsetY} = nativeEvent;\r\n        contextRef.current.beginPath()\r\n        contextRef.current.moveTo(x, y)\r\n        setIsDrawing(true)\r\n    }\r\n\r\n    const finishDrawing = () => {\r\n        contextRef.current.closePath()\r\n        setIsDrawing(false)\r\n    }\r\n\r\n    const draw = () =>{\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <canvas onMouseDown={startDrawing} onMouseUp={finishDrawing} onMouseMove={draw} ref={canvasRef}></canvas>\r\n    )\r\n}\r\n\r\n// window.addEventListener('mousemove', function(e){\r\n//     const canvas = new Canvas(e.x, e.y)\r\n//     canvas.update();\r\n// })\r\n\r\nexport default Canvas;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// constructor(x, y){\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.speedX = Math.random() * 4 - 2;\r\n//     this.speedY = Math.random() * 4 - 2;\r\n//     this.maxSize = Math.random() * 7 + 5;\r\n//     this.size = Math.random() * 1 + 2;\r\n// }\r\n\r\n// update(){\r\n//     ctx = canvas.getContext('2d')\r\n//     this.x += this.speedX;\r\n//     this.y += this.speedY;\r\n//     this.size += 0.1;\r\n//     if (this.size < this.maxSize){\r\n//         ctx.beginPath();\r\n//         ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n//         ctx.fillStyle = 'hsl(140,100%,50%)';\r\n//         ctx.fill();\r\n//         ctx.stroke();\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}