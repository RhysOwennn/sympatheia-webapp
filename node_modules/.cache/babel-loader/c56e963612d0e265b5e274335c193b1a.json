{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King Riz\\\\Downloads\\\\insta-repo-app-master\\\\src\\\\Pages\\\\Explore\\\\Explore.js\";\nimport React, { useRef, useEffect } from 'react'; // const Explore = () => <h2>Explore</h2>\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n\n  const draw = (ctx, frameCount) => {\n    //clears the frame\n    //   ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId; //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}; // const canvas = document.getElementById('canvas1')\n// const ctx = canvas.getContext('2d');\n// canvas.width = window.innerWidth;\n// canvas.height = window.innerHeight;\n\n\nclass Explore extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Canvas, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n} // class Root {\n//     constructor(x, y){\n//         this.x = x;\n//         this.y = y;\n//         this.speedX = Math.random() * 4 - 2;\n//         this.speedY = Math.random() * 4 - 2;\n//         this.maxSize = Math.random() * 7 + 5;\n//         this.size = Math.random() * 1 + 2;\n//     }\n//     update(){\n//         this.x += this.speedX;\n//         this.y +- this.speedY;\n//         this.size += 0.1;\n//         if (this.size < this.maxSize){\n//             ctx.beginPath();\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fillStyle = 'hsl(140, 100%, 50%)';\n//             ctx.fill();\n//             ctx.stroke();\n//         }\n//     }\n// }\n// window.addEventListener('mousemove', function(e){\n//     const root = new Root(e.x, e.y);\n//     root.update();\n// });\n\n\nexport default Canvas;","map":{"version":3,"sources":["C:\\Users\\King Riz\\Downloads\\insta-repo-app-master\\src\\Pages\\Explore\\Explore.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","draw","ctx","frameCount","fillStyle","beginPath","arc","Math","sin","PI","fill","canvas","current","width","window","innerWidth","height","innerHeight","context","getContext","animationFrameId","render","requestAnimationFrame","cancelAnimationFrame","Explore","Component"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC,C,CAGA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMK,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9B;AACJ;AACED,IAAAA,GAAG,CAACE,SAAJ,GAAgB,SAAhB;AACAF,IAAAA,GAAG,CAACG,SAAJ;AACAH,IAAAA,GAAG,CAACI,GAAJ,CAAQ,EAAR,EAAY,GAAZ,EAAiB,KAAGC,IAAI,CAACC,GAAL,CAASL,UAAU,GAAC,IAApB,KAA2B,CAA/C,EAAkD,CAAlD,EAAqD,IAAEI,IAAI,CAACE,EAA5D;AACAP,IAAAA,GAAG,CAACQ,IAAJ;AACD,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,MAAM,GAAGX,SAAS,CAACY,OAAzB;AACAD,IAAAA,MAAM,CAACE,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAJ,IAAAA,MAAM,CAACK,MAAP,GAAgBF,MAAM,CAACG,WAAvB;AACA,UAAMC,OAAO,GAAGP,MAAM,CAACQ,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIhB,UAAU,GAAG,CAAjB;AACA,QAAIiB,gBAAJ,CANc,CAQd;;AACA,UAAMC,MAAM,GAAG,MAAM;AACnBlB,MAAAA,UAAU;AACVF,MAAAA,IAAI,CAACiB,OAAD,EAAUf,UAAV,CAAJ;AACAiB,MAAAA,gBAAgB,GAAGN,MAAM,CAACQ,qBAAP,CAA6BD,MAA7B,CAAnB;AACD,KAJD;;AAKAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACS,oBAAP,CAA4BH,gBAA5B;AACD,KAFD;AAGD,GAnBQ,EAmBN,CAACnB,IAAD,CAnBM,CAAT;AAqBA,SAAO;AAAQ,IAAA,GAAG,EAAED;AAAb,KAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAnCH,C,CAqCA;AACA;AACA;AACA;;;AAGA,MAAMyB,OAAN,SAAsB7B,KAAK,CAAC8B,SAA5B,CAAsC;AAClCJ,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAPiC,C,CAUtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAevB,MAAf","sourcesContent":["\nimport React, { useRef, useEffect } from 'react'\n\n\n// const Explore = () => <h2>Explore</h2>\n\nconst Canvas = props => {\n  \n    const canvasRef = useRef(null)\n    \n    const draw = (ctx, frameCount) => {\n        //clears the frame\n    //   ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n      ctx.fillStyle = '#000000'\n      ctx.beginPath()\n      ctx.arc(50, 100, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n      ctx.fill()\n    }\n    \n    useEffect(() => {\n      const canvas = canvasRef.current\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const context = canvas.getContext('2d')\n      let frameCount = 0\n      let animationFrameId\n      \n      //Our draw came here\n      const render = () => {\n        frameCount++\n        draw(context, frameCount)\n        animationFrameId = window.requestAnimationFrame(render)\n      }\n      render()\n      \n      return () => {\n        window.cancelAnimationFrame(animationFrameId)\n      }\n    }, [draw])\n    \n    return <canvas ref={canvasRef} {...props}/>\n  }\n\n// const canvas = document.getElementById('canvas1')\n// const ctx = canvas.getContext('2d');\n// canvas.width = window.innerWidth;\n// canvas.height = window.innerHeight;\n\n\nclass Explore extends React.Component {\n    render() {\n        return (\n            <div>\n                <Canvas />\n            </div>\n        )\n    }\n}\n\n// class Root {\n//     constructor(x, y){\n//         this.x = x;\n//         this.y = y;\n//         this.speedX = Math.random() * 4 - 2;\n//         this.speedY = Math.random() * 4 - 2;\n//         this.maxSize = Math.random() * 7 + 5;\n//         this.size = Math.random() * 1 + 2;\n//     }\n\n//     update(){\n//         this.x += this.speedX;\n//         this.y +- this.speedY;\n//         this.size += 0.1;\n//         if (this.size < this.maxSize){\n//             ctx.beginPath();\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fillStyle = 'hsl(140, 100%, 50%)';\n//             ctx.fill();\n//             ctx.stroke();\n//         }\n//     }\n// }\n// window.addEventListener('mousemove', function(e){\n//     const root = new Root(e.x, e.y);\n//     root.update();\n// });\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}