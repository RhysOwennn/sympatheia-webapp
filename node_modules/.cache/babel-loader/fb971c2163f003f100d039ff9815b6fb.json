{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King Riz\\\\Downloads\\\\insta-repo-app-master\\\\src\\\\Pages\\\\Explore\\\\Explore.js\";\nimport React, { useRef, useEffect } from 'react'; // const Explore = () => <h2>Explore</h2>\n\nconst Canvas = props => {\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight; //Our first draw\n\n    context.fillStyle = '#000000';\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    this.x = x;\n    this.y = y;\n    this.speedX = Math.random() * 4 - 2;\n    this.speedY = Math.random() * 4 - 2;\n    this.maxSize = Math.random() * 7 + 5;\n    this.size = Math.random() * 1 + 2;\n    this.x += this.speedX;\n    this.y + -this.speedY;\n    this.size += 0.1;\n\n    if (this.size < this.maxSize) {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fillStyle = 'hsl(140, 100%, 50%)';\n      ctx.fill();\n      ctx.stroke();\n    }\n  }, []);\n  return React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}; // const canvas = document.getElementById('canvas1')\n// const ctx = canvas.getContext('2d');\n// canvas.width = window.innerWidth;\n// canvas.height = window.innerHeight;\n\n\nclass Explore extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Canvas, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n} // class Root {\n//     constructor(x, y){\n//         this.x = x;\n//         this.y = y;\n//         this.speedX = Math.random() * 4 - 2;\n//         this.speedY = Math.random() * 4 - 2;\n//         this.maxSize = Math.random() * 7 + 5;\n//         this.size = Math.random() * 1 + 2;\n//     }\n//     update(){\n//         this.x += this.speedX;\n//         this.y +- this.speedY;\n//         this.size += 0.1;\n//         if (this.size < this.maxSize){\n//             ctx.beginPath();\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fillStyle = 'hsl(140, 100%, 50%)';\n//             ctx.fill();\n//             ctx.stroke();\n//         }\n//     }\n// }\n\n\nwindow.addEventListener('mousemove', function (e) {\n  const root = new Root(e.x, e.y);\n  root.update();\n});\nexport default Canvas;","map":{"version":3,"sources":["C:\\Users\\King Riz\\Downloads\\insta-repo-app-master\\src\\Pages\\Explore\\Explore.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","canvas","current","context","getContext","width","window","innerWidth","height","innerHeight","fillStyle","fillRect","x","y","speedX","Math","random","speedY","maxSize","size","ctx","beginPath","arc","PI","fill","stroke","Explore","Component","render","addEventListener","e","root","Root","update"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC,C,CAGA;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAEpB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,MAAM,GAAGD,SAAS,CAACE,OAAzB;AACA,UAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAhB;AACAH,IAAAA,MAAM,CAACI,KAAP,GAAeC,MAAM,CAACC,UAAtB;AACAN,IAAAA,MAAM,CAACO,MAAP,GAAgBF,MAAM,CAACG,WAAvB,CAJc,CAKd;;AACAN,IAAAA,OAAO,CAACO,SAAR,GAAoB,SAApB;AACAP,IAAAA,OAAO,CAACQ,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuBR,OAAO,CAACF,MAAR,CAAeI,KAAtC,EAA6CF,OAAO,CAACF,MAAR,CAAeO,MAA5D;AAEA,SAAKI,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,MAAL,GAAcC,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAlC;AACA,SAAKC,MAAL,GAAcF,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAlC;AACA,SAAKE,OAAL,GAAeH,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAnC;AACA,SAAKG,IAAL,GAAYJ,IAAI,CAACC,MAAL,KAAgB,CAAhB,GAAoB,CAAhC;AAEA,SAAKJ,CAAL,IAAU,KAAKE,MAAf;AACE,SAAKD,CAAL,GAAQ,CAAE,KAAKI,MAAf;AACA,SAAKE,IAAL,IAAa,GAAb;;AACA,QAAI,KAAKA,IAAL,GAAY,KAAKD,OAArB,EAA6B;AACzBE,MAAAA,GAAG,CAACC,SAAJ;AACAD,MAAAA,GAAG,CAACE,GAAJ,CAAQ,KAAKV,CAAb,EAAgB,KAAKC,CAArB,EAAwB,KAAKM,IAA7B,EAAmC,CAAnC,EAAsCJ,IAAI,CAACQ,EAAL,GAAU,CAAhD;AACAH,MAAAA,GAAG,CAACV,SAAJ,GAAgB,qBAAhB;AACAU,MAAAA,GAAG,CAACI,IAAJ;AACAJ,MAAAA,GAAG,CAACK,MAAJ;AACH;AACJ,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,SAAO;AAAQ,IAAA,GAAG,EAAEzB;AAAb,KAA4BD,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAjCH,C,CAmCA;AACA;AACA;AACA;;;AAGA,MAAM2B,OAAN,SAAsB/B,KAAK,CAACgC,SAA5B,CAAqC;AACnCC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAPkC,C,CAUrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtB,MAAM,CAACuB,gBAAP,CAAwB,WAAxB,EAAqC,UAASC,CAAT,EAAW;AAC5C,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,CAAC,CAAClB,CAAX,EAAckB,CAAC,CAACjB,CAAhB,CAAb;AACAkB,EAAAA,IAAI,CAACE,MAAL;AACH,CAHD;AAKA,eAAenC,MAAf","sourcesContent":["\nimport React, { useRef, useEffect } from 'react'\n\n\n// const Explore = () => <h2>Explore</h2>\n\nconst Canvas = props => {\n  \n    const canvasRef = useRef(null)\n    \n    useEffect(() => {\n      const canvas = canvasRef.current\n      const context = canvas.getContext('2d')\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      //Our first draw\n      context.fillStyle = '#000000'\n      context.fillRect(0, 0, context.canvas.width, context.canvas.height)\n\n      this.x = x;\n      this.y = y;\n      this.speedX = Math.random() * 4 - 2;\n      this.speedY = Math.random() * 4 - 2;\n      this.maxSize = Math.random() * 7 + 5;\n      this.size = Math.random() * 1 + 2;\n\n      this.x += this.speedX;\n        this.y +- this.speedY;\n        this.size += 0.1;\n        if (this.size < this.maxSize){\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n            ctx.fillStyle = 'hsl(140, 100%, 50%)';\n            ctx.fill();\n            ctx.stroke();\n        }\n    }, [])\n    \n    return <canvas ref={canvasRef} {...props}/>\n  }\n\n// const canvas = document.getElementById('canvas1')\n// const ctx = canvas.getContext('2d');\n// canvas.width = window.innerWidth;\n// canvas.height = window.innerHeight;\n\n\nclass Explore extends React.Component{\n  render(){\n      return(\n          <div>\n              <Canvas />\n          </div>\n      )\n  }\n}\n\n// class Root {\n//     constructor(x, y){\n//         this.x = x;\n//         this.y = y;\n//         this.speedX = Math.random() * 4 - 2;\n//         this.speedY = Math.random() * 4 - 2;\n//         this.maxSize = Math.random() * 7 + 5;\n//         this.size = Math.random() * 1 + 2;\n//     }\n\n//     update(){\n//         this.x += this.speedX;\n//         this.y +- this.speedY;\n//         this.size += 0.1;\n//         if (this.size < this.maxSize){\n//             ctx.beginPath();\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fillStyle = 'hsl(140, 100%, 50%)';\n//             ctx.fill();\n//             ctx.stroke();\n//         }\n//     }\n// }\nwindow.addEventListener('mousemove', function(e){\n    const root = new Root(e.x, e.y);\n    root.update();\n});\n\nexport default Canvas;"]},"metadata":{},"sourceType":"module"}