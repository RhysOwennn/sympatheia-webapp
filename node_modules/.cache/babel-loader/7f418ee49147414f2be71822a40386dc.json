{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\King Riz\\\\Downloads\\\\insta-repo-app-master\\\\src\\\\Pages\\\\Canvas\\\\Canvas.js\";\nimport React, { useRef, useEffect } from 'react';\nconst canvasRef = useRef(null);\nconst canvas = canvasRef.current;\n\nclass Canvas extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }));\n  }\n\n} // window.addEventListener('mousemove', function(e){\n//     const canvas = new Canvas(e.x, e.y)\n//     canvas.update();\n// })\n\n\nexport default Canvas; // constructor(x, y){\n//     this.x = x;\n//     this.y = y;\n//     this.speedX = Math.random() * 4 - 2;\n//     this.speedY = Math.random() * 4 - 2;\n//     this.maxSize = Math.random() * 7 + 5;\n//     this.size = Math.random() * 1 + 2;\n// }\n// update(){\n//     ctx = canvas.getContext('2d')\n//     this.x += this.speedX;\n//     this.y += this.speedY;\n//     this.size += 0.1;\n//     if (this.size < this.maxSize){\n//         ctx.beginPath();\n//         ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//         ctx.fillStyle = 'hsl(140,100%,50%)';\n//         ctx.fill();\n//         ctx.stroke();\n//     }\n// }","map":{"version":3,"sources":["C:\\Users\\King Riz\\Downloads\\insta-repo-app-master\\src\\Pages\\Canvas\\Canvas.js"],"names":["React","useRef","useEffect","canvasRef","canvas","current","Canvas","Component","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,MAAMG,MAAM,GAAGD,SAAS,CAACE,OAAzB;;AAGA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAEhCC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADJ;AAGH;;AAN+B,C,CAUpC;AACA;AACA;AACA;;;AAEA,eAAeF,MAAf,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport React, { useRef, useEffect } from 'react'\r\n\r\nconst canvasRef = useRef(null)\r\nconst canvas = canvasRef.current\r\n\r\n\r\nclass Canvas extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div><canvas/></div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// window.addEventListener('mousemove', function(e){\r\n//     const canvas = new Canvas(e.x, e.y)\r\n//     canvas.update();\r\n// })\r\n\r\nexport default Canvas;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// constructor(x, y){\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.speedX = Math.random() * 4 - 2;\r\n//     this.speedY = Math.random() * 4 - 2;\r\n//     this.maxSize = Math.random() * 7 + 5;\r\n//     this.size = Math.random() * 1 + 2;\r\n// }\r\n\r\n// update(){\r\n//     ctx = canvas.getContext('2d')\r\n//     this.x += this.speedX;\r\n//     this.y += this.speedY;\r\n//     this.size += 0.1;\r\n//     if (this.size < this.maxSize){\r\n//         ctx.beginPath();\r\n//         ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\r\n//         ctx.fillStyle = 'hsl(140,100%,50%)';\r\n//         ctx.fill();\r\n//         ctx.stroke();\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}